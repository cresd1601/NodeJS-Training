@startuml

actor User as user
participant "Vinmart" as vinmart
participant "API Server" as apiServer
participant "Email Service" as emailService
database Database as database

group Successful case

user ->  vinmart : Enter Email

activate vinmart

vinmart ->> apiServer : Request\nMethod: POST \nEndpoint: /api/v1/authentication/reset-password\nPayload: { email }

activate apiServer

apiServer ->> database : Query "User" table by "email" attribute

activate database

database -->> apiServer : Found record

apiServer ->> database : Save new generated password for user 

database -->> apiServer: Response success

deactivate database

apiServer ->> emailService : Request to send new password to inputted email

activate emailService

emailService -->> apiServer: Response success

group Asynchronous - Reset Password

emailService -->> user : Send "New Password" Email

deactivate emailService

end

apiServer -->> vinmart : [*] New password sent to email \nResponse\nMethod: POST \nEndpoint: /api/v1/authentication/reset-password\nStatus: 200\nPayload: {}

deactivate apiServer

vinmart -> user : Redirect to Sign In screen

deactivate vinmart

else Failure case

user ->  vinmart : Enter Email

activate vinmart

vinmart ->> apiServer : Request\nMethod: POST \nEndpoint: /api/v1/authentication/reset-password\nPayload: { email }

activate apiServer

apiServer ->> database : Query "User" table by "email" attribute

activate database

database -->> apiServer : Cannot find by "email" attribute

deactivate database

apiServer -->> vinmart : [*] Email is not registered\nResponse\nMethod: POST \nEndpoint: /api/v1/authentication/reset-password\nStatus 400\nPayload: { errors } 

deactivate apiServer

vinmart --> user: Dispay Error Message\nMessage: The email address you entered is not assigned to registered user.

deactivate vinmart

end

@enduml